

- name: check if cromwell-utils are installed
  shell: "which /usr/local/bin/cromwell-cli"
  register: cromwell_bin
  ignore_errors: true


- name: install cromwell-utils
  pip:
    name: git+https://www.github.com/neuro-sysmed/cromwell-utils.git
    extra_args: --prefix=/usr/local/ 
  when: cromwell_bin.rc != 0

- name: make dir for nsm-analysis
  file:
    path: "{{ nsm_analysis_root }}"
    owner: "{{nsm_analysis_user}}"
    state: directory
    owner: "{{ecc_user}}"

- name: Git checkout of nsm-analysis
  git:
    repo: https://github.com/neuro-sysmed/nsm-analysis.git
    dest: "{{ nsm_analysis_root }}"
    force: yes

- name: ensure jar dir exists
  file:
    path: "{{cluster_root}}jars/"
    state: directory
    
- name: download cromwell-jar
  get_url: 
    url: https://github.com/broadinstitute/cromwell/releases/download/70/cromwell-70.jar
    dest: "{{cluster_root}}jars/"
    mode: '0644'

- name: download womtool-jar
  get_url: 
    url: https://github.com/broadinstitute/cromwell/releases/download/70/womtool-70.jar
    dest: "{{cluster_root}}jars/"
    mode: '0644'

#- name: make imports paths absolute for workflows and utils
#  command: 
#    chdir: "{{  nsm_analysis_root }}"
#    cmd: /usr/local/bin/cromwell-cli utils patch-workflows

- name: make imports paths absolute version.json file in versions.wdl
  command: 
    chdir: "{{  nsm_analysis_root }}"
    cmd: /usr/local/bin/cromwell-cli utils patch-versionfile

- name: make nsm-analysis.zip file
  command: 
    chdir: "{{  nsm_analysis_root }}"
    cmd: /usr/local/bin/cromwell-cli utils zip

- name: ensure images dir exists
  file:
    path: "{{cluster_root}}images/"
    state: directory

#- name: (re)build nsm-tools image, overwrites to ensure right version
#  command:
#    chdir: "{{cluster_root}}/images"
#    cmd: singularity build -F nsm-tools.sif docker://bruggerk/nsm-tools:{{nsm_tools_version}}
    